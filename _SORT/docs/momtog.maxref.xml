<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="momtog" module="max" category="Oni, MIDI">

	<digest>
		Conditional MIDI by Modificatios
	</digest>

	<description>
		Defines a set of modifyers and their numeric conditions to allow pass through to a desired MIDI Port and retrieve meanwhile accumulated MIDI once met.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Oni</metadata>
		<metadata name="tag">MIDI</metadata>
		<metadata name="tag">Modifier</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="int/list">
			<digest>MIDI event</digest>
		</inlet>
		<inlet id="1" type="symbol">
			<digest>destination MIDI port</digest>
			<description>valid MIDI port as destination</description>
		</inlet>
		<inlet id="2" type="bang/anything">
			<digest>updates given MIDI port</digest>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="int (bool)">
			<digest>0 = closed, 1 = pass through</digest>
			<description>1 if all given modifiers meet conditions, 0 if one of them does not.</description>
		</outlet>
		<outlet id="1" type="list">
			<digest>current values of given modifiers</digest>
		</outlet>
		<outlet id="1" type="list">
			<digest>current values of given modifiers</digest>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="midi port" optional="0" type="symbol">
			<digest>destination MIDI port</digest>
		</objarg>
		<objarg name="modifier conditions" optional="0" type="list">
			<digest>string of one or more modifiers followed by their numeric conditions</digest>
			<description>any number of modifiers (symbol), each followed by any number of numeric conditions. Natural numbers allow pass through, negative numbers exclude pass through.
      <br />
			<br />
			A modifier is changed by sending a numeric value to a <o>send</o> or <o>forward</o> object with the modifiers name as argument.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist />
			<digest>
				MIDI event
			</digest>
			<description>
				In left inlet: Iterated MIDI event to be either passed through or temporarily stored. Can also be input as <m>list</m>.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				MIDI event
			</digest>
			<description>
				In left inlet: MIDI event to be either passed through or temporarily stored. Can also be input as iterated <m>int</m>.
			</description>
		</method>
		<method name="symbol">
			<arglist />
			<digest>
				MIDI Port
			</digest>
			<description>
				In middle inlet: Name of valid destination MIDI Port.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Update MIDI Port and post information to the Max Window
			</digest>
			<description>
				In right inlet: Update the MIDI Port and post the following information to the Max window:
				<br />
				<br />
				murrent MIDI port
				<br />
				modifier conditions
				<br />
				current state of modifiers
				<br />
				all MIDI currently stored
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->

	<attributelist>

		<attribute name='update' type='bool' size='1' >
			<digest>Toggle temporary storage of MIDI data</digest>
			<description>Toggle temporary storage of MIDI data while modifiers do not meet conditions. </description>
		</attribute>

		<attribute name='initial' type='bool' size='1' >
			<digest>Initial pass through setting</digest>
			<description>Initial pass through setting regardless of modifiers. </description>
		</attribute>

	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="oni.modmidiin"/>
		<seealso name="oni.modgate"/>
		<seealso name="oni.momtog"/>
	</seealsolist>

</c74object>
