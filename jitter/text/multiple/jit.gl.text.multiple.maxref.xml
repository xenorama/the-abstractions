<?xml version='1.0' encoding='utf-8' standalone='yes'?>

<c74object name='jit.gl.text.multiple' category='Jitter GL'>

	<digest>Create multiple instances of <o>jit.gl.text</o></digest>
	<description>Written by Tim Heinze Â© 2022, www.xenorama.com.<br/>Uses several <o>jit.matrix</o> objects to repeatedely draw an instance of a <o>jit.gl.text</o>. It attaches to a named <o>jit.gl.text</o> object provided by the <at>targetname</at> attribute</description>

	<discussion>
		<o>jit.gl.text</o> is not nateivly supported by <o>jit.gl.multiple</o>, hence this objects attempts to provide the functionality for texts also. It is based entirely on an internal <o>js</o> object and is subject to improvement.
	</discussion>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Cycling '74 </metadata>
		<metadata name='tag'>Jitter OpenGL</metadata>
		<metadata name='tag'>Text</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

			<objarg name="drawing-context" optional="1" type="symbol" size="1">
				<digest>Named drawing context</digest>
				<description>Named drawing context.</description>
			</objarg>


		<objarg name='maximum-number-of-instances' optional='1' type='number'>
			<digest>Maximum number of <o>jit.gl.text</o> instances</digest>
			<description>Maximum nNumber of <o>jit.gl.text</o> instances. Matrices with fewer cells than instances will wrap around, cells of higher order are ignored.</description>
		</objarg>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>
		<method name="jit_matrix">
			<arglist>
			</arglist>
			<digest>
				(Inlet 2) Render text from Jitter Matrix
			</digest>
			<description>
				(Inlet 2) Render text from Jitter Matrix. Depending on the <at>textmode</at> attribute, the incoming jit_matrix (planecount = 1, type = &quot;char&quot;) is interpreted as follows:<br/><br/>
				<at>textmode</at> &quot;charcode&quot;: lines correspond to <o>jit.gl.text</o> instances, text is read from cells using their char-value<br/><br/>
				<at>textmode</at> &quot;coll&quot;: cells correspond to <o>jit.gl.text</o> instances, text is read from the named coll object (see the necessary <at>source</at> listing), displaying whtever is contained
			</description>
		</method>
		<method name="int+jit_matrix">
			<arglist>
			</arglist>
			<digest>
				(Inlet 1) Control indexed glparam using Jitter Matrices
			</digest>
			<description>
				(Inlet 1) Control indexed glparam using Jitter Matrices. The expected <m>jit_matrix</m> message must be preceeded by a 0-based numerical index. For convencience, it is advised to use the <o>funnel</o> object for multiple matrices.<br/>
				See <o>jit.gl.multiple</o> for fundamental guidance on how to control glparams using matrices.
			</description>
		</method>
		<method name="getparams">
			<arglist>
			</arglist>
			<digest>
				Post a list of alla controllable glparams
			</digest>
			<description>
				Post a list of alla controllable glparams to the Max Window.
			</description>
		</method>
		<method name="sendtext">
			<arglist>
			</arglist>
			<digest>
				Send text (symbol) to indexed <o>jit.gl.text</o> child
			</digest>
			<description>
				Send text (symbol) to indexed <o>jit.gl.text</o> child. Note, tat the first argument must be a numeric index (0-based), representing the desired text object
			</description>
		</method>
	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

		<attribute name='targetname' get='1' set='1' type='symbol' size='1' >
			<digest>Object name of <o>jit.gl.text</o></digest>
			<description>Object name of <o>jit.gl.text</o> which is to be multiplied.</description>
		</attribute>

		<attribute name='glparams' get='1' set='1' type='list' size='1' >
			<digest>GL parameters to control</digest>
			<description>GL parameters to control using input <m>jit_matrices.</m></description>
		</attribute>

		<attribute name='textmode' get='1' set='1' type='symbol' size='1' >
			<digest>Specify the source for text to be displayed</digest>
			<description>Specify the source for text to be displayed. Currently only &quot;coll&quot; or &quot;charcode&quot; (as symbol argument) are supported. The middle inlet of <o>jit.gl.text.multiple</o> then expects a single-plane jit_matrix of type <m>char</m> where every line represents a single instance of <o>jit.gl.text</o>. When set to &quot;coll&quot; a <o>coll</o> object with a valid <at>source</at> name is to be present in the environment and every numeric index is read as individual <m>text</m> message of children instances.<br/> When set to &quot;charcode&quot; every line is interpreted as text for every instance.</description>
		</attribute>

		<attribute name='source' get='1' set='1' type='symbol' size='1' >
			<digest>coll-reference name</digest>
			<description>coll-reference name (necessary)</description>
		</attribute>

		<attribute name='instances' get='1' set='1' type='int' size='1' >
			<digest>Maximum number of <o>jit.gl.text</o> instances</digest>
			<description>Maximum nNumber of <o>jit.gl.text</o> instances. Matrices with fewer cells than instances will wrap around, cells of higher order are ignored.</description>
		</attribute>

		<attribute name='quiet' get='1' set='1' type='int' size='1' >
			<digest>Throw errors as regular notifications</digest>
			<description>Post errors as regular notifications to Max Window (default). When unflagged to &quot;0&quot;, all errors will actually throw an error to the Max Window.</description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='jit.gl.multiple' />
		<seealso name='jit.gl.text' />
		<!-- <seealso name='ease~' />
		<seealso name='ease.xfade' />
		<seealso name='ease.xfade~' />
		<seealso name='line' />
		<seealso name='line~' />
		<seealso name='curve~' /> -->
	</seealsolist>


</c74object>
